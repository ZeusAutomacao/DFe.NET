//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
/********************************************************************************/
/* Projeto: Biblioteca ZeusMDFe                                                 */
/* Biblioteca C# para emissão de Manifesto Eletrônico Fiscal de Documentos      */
/* (https://mdfe-portal.sefaz.rs.gov.br/                                        */
/*                                                                              */
/* Direitos Autorais Reservados (c) 2014 Adenilton Batista da Silva             */
/*                                       Zeusdev Tecnologia LTDA ME             */
/*                                                                              */
/*  Você pode obter a última versão desse arquivo no GitHub                     */
/* localizado em https://github.com/adeniltonbs/Zeus.Net.NFe.NFCe               */
/*                                                                              */
/*                                                                              */
/*  Esta biblioteca é software livre; você pode redistribuí-la e/ou modificá-la */
/* sob os termos da Licença Pública Geral Menor do GNU conforme publicada pela  */
/* Free Software Foundation; tanto a versão 2.1 da Licença, ou (a seu critério) */
/* qualquer versão posterior.                                                   */
/*                                                                              */
/*  Esta biblioteca é distribuída na expectativa de que seja útil, porém, SEM   */
/* NENHUMA GARANTIA; nem mesmo a garantia implícita de COMERCIABILIDADE OU      */
/* ADEQUAÇÃO A UMA FINALIDADE ESPECÍFICA. Consulte a Licença Pública Geral Menor*/
/* do GNU para mais detalhes. (Arquivo LICENÇA.TXT ou LICENSE.TXT)              */
/*                                                                              */
/*  Você deve ter recebido uma cópia da Licença Pública Geral Menor do GNU junto*/
/* com esta biblioteca; se não, escreva para a Free Software Foundation, Inc.,  */
/* no endereço 59 Temple Street, Suite 330, Boston, MA 02111-1307 USA.          */
/* Você também pode obter uma copia da licença em:                              */
/* http://www.opensource.org/licenses/lgpl-license.php                          */
/*                                                                              */
/* Zeusdev Tecnologia LTDA ME - adenilton@zeusautomacao.com.br                  */
/* http://www.zeusautomacao.com.br/                                             */
/* Rua Comendador Francisco josé da Cunha, 111 - Itabaiana - SE - 49500-000     */
/********************************************************************************/

using System;
using System.Threading.Tasks;
using System.Xml;
using DFe.Classes.Entidades;
using MDFe.Wsdl.Configuracao;
using SOAP.Handler.Body;
using SOAP.Handler.Configuracao;
using SOAP.Handler.Head;
using SOAP.Handler.Requisicao;
using static SOAP.Handler.Enums.Enums;


namespace MDFe.Wsdl.Gerado.MDFeRecepcao
{

    /// <summary>
    /// Classe responsável por realizar as consultas SOAP do tipo Recepção via HttpClient.
    /// Compatível com .NET Standard e .NET FRAMEWORK 4.5
    /// </summary>
    public partial class MDFeRecepcao
    {
        //Envelope SOAP para envio
        private SoapConfig soapConfig;

        //Configurações do WSDL para estabelecimento da comunicação
        private WsdlConfiguracao configuracao;

        /// <summary>
        /// Atribui as configurações do WSDL.
        /// </summary>
        /// <param name="configuracao"></param>
        public MDFeRecepcao(WsdlConfiguracao configuracao)
        {
            if (configuracao == null)
                throw new ArgumentNullException();

            this.configuracao = configuracao;

            System.Net.ServicePointManager.SecurityProtocol =
                System.Net.SecurityProtocolType.Tls11 | System.Net.SecurityProtocolType.Tls12;
        }

        /// <summary>
        /// Encapsula os dados da requisição no envelope e realiza a requisção ao Web Service.
        /// </summary>
        /// <param name="mdfeDadosMsg"></param>
        /// <returns>XmlNode</returns>
        public async Task<System.Xml.XmlNode> mdfeRecepcaoLote(System.Xml.XmlNode mdfeDadosMsg)
        {
            var resposta = string.Empty;
            var xmlResult = new XmlDocument();

            var retorno = new SoapHttpClient();

            var estado = (Estado)Enum.Parse(typeof(Estado), configuracao.CodigoIbgeEstado);
            var versaoServico = (VersaoServico)Enum.Parse(typeof(VersaoServico), configuracao.Versao);

            var tagcorpo = new TagCorpo(estado.GetParametroDeEntradaWsdl(false, TipoRequisicao.MDFe));

            soapConfig = new SoapConfig
            {
                Cabecalho = new Cabecalho(estado, versaoServico,
                    new TagCabecalho(), "http://www.portalfiscal.inf.br/mdfe/wsdl/MDFeRecepcao",
                    TipoRequisicao.MDFe),
                Corpo = new Corpo("http://www.portalfiscal.inf.br/mdfe/wsdl/MDFeRecepcao", tagcorpo),
                Certificado = configuracao.CertificadoDigital,
                TimeOut = configuracao.TimeOut,
                Url = configuracao.Url
            };

            soapConfig.Corpo.Xml = mdfeDadosMsg;

            resposta = await retorno.Invoke(soapConfig);

            xmlResult.LoadXml(resposta);

            return ((System.Xml.XmlNode)xmlResult.GetElementsByTagName("retEnviMDFe")[0]);
        }
    }
}